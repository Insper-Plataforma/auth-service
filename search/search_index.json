{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Auth Service","text":"<p>O <code>auth-service</code> \u00e9 respons\u00e1vel por autenticar usu\u00e1rios, registrar contas e gerar tokens JWT. Ele atua como ponto central de seguran\u00e7a na plataforma, delegando o gerenciamento de contas ao <code>account-service</code>.</p>"},{"location":"#funcionalidades","title":"Funcionalidades:","text":"<ul> <li>Autentica\u00e7\u00e3o: Permite que usu\u00e1rios fa\u00e7am login utilizando e-mail e senha.</li> <li>Registro de Conta: Permite que novos usu\u00e1rios se registrem no sistema.</li> <li>Valida\u00e7\u00e3o de Tokens: Valida tokens JWT para garantir a autenticidade das requisi\u00e7\u00f5es.</li> </ul>"},{"location":"arquitetura/","title":"Arquitetura","text":""},{"location":"arquitetura/#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<pre><code>src/main/java/store/auth/\n\u2502 \u251c\u2500\u2500 AuthApplication.java # Classe principal\n\u2502 \u251c\u2500\u2500 AuthResource.java # Controller REST\n\u2502 \u251c\u2500\u2500 AuthService.java # Regras de neg\u00f3cio\n\u2502 \u251c\u2500\u2500 JwtService.java # L\u00f3gica de gera\u00e7\u00e3o/valida\u00e7\u00e3o JWT\n\u2502 \u251c\u2500\u2500 AuthParser.java # Convers\u00e3o entre DTOs\n\u2502 \u2514\u2500\u2500 Register.java # Entidade local\n\u251c\u2500\u2500 resources/\n\u2502 \u2514\u2500\u2500 application.yaml # Configura\u00e7\u00f5es do servi\u00e7o\n</code></pre>"},{"location":"arquitetura/#comunicacao-com-account-service","title":"Comunica\u00e7\u00e3o com Account Service","text":"<p>O <code>AuthService</code> se comunica diretamente com <code>account-service</code> via Feign Client, exposto por <code>AccountController</code>, para criar e autenticar contas.</p> <ul> <li>Registro \u2192 chama <code>accountController.create(...)</code></li> <li>Login \u2192 chama <code>accountController.findByEmailAndPassword(...)</code></li> </ul>"},{"location":"componentes/","title":"Componentes Internos","text":""},{"location":"componentes/#authservice","title":"AuthService","text":"<ul> <li>Cont\u00e9m a l\u00f3gica de registro, login e verifica\u00e7\u00e3o de tokens.</li> <li>Utiliza o <code>AccountController</code> para delegar a\u00e7\u00f5es de conta.</li> <li>Gera tokens com <code>JwtService</code>.</li> </ul>"},{"location":"componentes/#jwtservice","title":"JwtService","text":"<ul> <li>Cria tokens JWT com <code>idAccount</code>, <code>nbf</code> (not before) e <code>exp</code> (expiration).</li> <li>Valida tokens recebidos e extrai o <code>idAccount</code>.</li> <li>Usa <code>jjwt</code> (Java JWT) com chave secreta vinda do <code>application.yaml</code>.</li> </ul>"},{"location":"componentes/#authresource","title":"AuthResource","text":"<ul> <li>Exp\u00f5e os endpoints REST definidos pela interface <code>AuthController</code>.</li> <li>Encapsula chamadas ao servi\u00e7o e responde com DTOs (<code>TokenOut</code>, <code>SolveOut</code>).</li> </ul>"},{"location":"componentes/#authparser","title":"AuthParser","text":"<ul> <li>Converte <code>RegisterIn</code> \u2192 <code>Register</code></li> <li>Converte <code>String</code> \u2192 <code>TokenOut</code></li> </ul>"},{"location":"componentes/#register-entidade-local","title":"Register (entidade local)","text":"<p>Representa os dados de um registro (nome, email, senha).</p>"},{"location":"endpoints/","title":"Endpoints","text":"<p>Base URL: <code>/auth</code></p>"},{"location":"endpoints/#post-authregister","title":"POST <code>/auth/register</code>","text":"<p>Registra um novo usu\u00e1rio.</p>"},{"location":"endpoints/#request","title":"Request","text":"<pre><code>{\n  \"name\": \"Lucas\",\n  \"email\": \"lucas@exemplo.com\",\n  \"password\": \"12345678\"\n}\n</code></pre>"},{"location":"endpoints/#response","title":"Response","text":"<pre><code>{\n  \"token\": \"jwt.token.aqui\"\n}\n</code></pre>"},{"location":"endpoints/#post-authlogin","title":"POST <code>/auth/login</code>","text":"<p>Autentica e retorna o token.</p>"},{"location":"endpoints/#request_1","title":"Request","text":"<pre><code>{\n  \"email\": \"lucas@exemplo.com\",\n  \"password\": \"12345678\"\n}\n</code></pre>"},{"location":"endpoints/#response_1","title":"Response","text":"<pre><code>{\n  \"token\": \"jwt.token.aqui\"\n}\n</code></pre>"},{"location":"endpoints/#post-authsolve","title":"POST <code>/auth/solve</code>","text":"<p>Extrai idAccount do token.</p>"},{"location":"endpoints/#request_2","title":"Request","text":"<pre><code>{\n  \"token\": \"jwt.token.aqui\"\n}\n</code></pre>"},{"location":"endpoints/#response_2","title":"Response","text":"<pre><code>{\n  \"idAccount\": \"uuid\"\n}\n</code></pre>"},{"location":"fluxo-autenticacao/","title":"Fluxo de Autentica\u00e7\u00e3o","text":""},{"location":"fluxo-autenticacao/#1-usuario-se-registra","title":"1. Usu\u00e1rio se registra","text":"<ul> <li>Envia nome, email, senha</li> <li><code>auth-service</code> chama <code>account-service</code> para criar a conta</li> <li>Um token JWT \u00e9 gerado e retornado</li> </ul>"},{"location":"fluxo-autenticacao/#2-usuario-faz-login","title":"2. Usu\u00e1rio faz login","text":"<ul> <li>Envia email e senha</li> <li><code>auth-service</code> autentica via <code>account-service</code></li> <li>Um novo token JWT \u00e9 gerado e retornado</li> </ul>"},{"location":"fluxo-autenticacao/#3-token-e-resolvido","title":"3. Token \u00e9 resolvido","text":"<ul> <li>Servi\u00e7os internos usam <code>/auth/solve</code> para extrair <code>idAccount</code></li> </ul>"},{"location":"jwt/","title":"JWT e Seguran\u00e7a","text":""},{"location":"jwt/#criacao-de-tokens","title":"Cria\u00e7\u00e3o de Tokens","text":"<p>Feita no <code>JwtService</code> usando:</p> <ul> <li><code>issuer</code>: nome da plataforma (via <code>.yaml</code>)</li> <li><code>secret-key</code>: chave base64 (via <code>.yaml</code>)</li> <li><code>nbf</code> e <code>exp</code>: in\u00edcio e expira\u00e7\u00e3o</li> </ul>"},{"location":"jwt/#exemplo-de-payload","title":"Exemplo de Payload","text":"<pre><code>{\n  \"jti\": \"idAccount\",\n  \"iss\": \"auth-service\",\n  \"nbf\": 1716673000,\n  \"exp\": 1716759400\n}\n</code></pre>"},{"location":"jwt/#validacao","title":"Valida\u00e7\u00e3o","text":"<p>O <code>JwtService</code> valida o token usando: - <code>issuer</code>: nome da plataforma (via <code>.yaml</code>) - <code>secret-key</code>: chave base64 (via <code>.yaml</code>) - <code>nbf</code> e <code>exp</code>: in\u00edcio e expira\u00e7\u00e3o - <code>jti</code>: idAccount (campo jti) - <code>aud</code>: p\u00fablico (n\u00e3o utilizado)</p> <p>Ao resolver o token (solve):</p> <ul> <li>Verifica se est\u00e1 expirado (exp)</li> <li>Verifica se j\u00e1 est\u00e1 ativo (nbf)</li> <li>Retorna idAccount (campo jti)</li> </ul>"},{"location":"jwt/#recomendacoes","title":"Recomenda\u00e7\u00f5es","text":"<ul> <li>Armazene o token com seguran\u00e7a</li> <li>Use Authorization: Bearer  <li>Tokens s\u00e3o stateless (n\u00e3o precisam de sess\u00e3o)</li>"},{"location":"setup/","title":"Setup e Depend\u00eancias - Auth Service","text":"<p>Este microsservi\u00e7o \u00e9 respons\u00e1vel pela autentica\u00e7\u00e3o da plataforma. Ele integra-se com o <code>account-service</code> para criar/validar contas e usa JWT para gerar tokens.</p>"},{"location":"setup/#requisitos","title":"Requisitos","text":"<ul> <li>Java 17+</li> <li>Spring Boot</li> <li>OpenFeign</li> <li>jjwt (Java JWT)</li> <li>Lombok</li> </ul>"},{"location":"setup/#dependencias-pomxml","title":"Depend\u00eancias (pom.xml)","text":"<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.flywaydb&lt;/groupId&gt;\n    &lt;artifactId&gt;flyway-core&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.postgresql&lt;/groupId&gt;\n    &lt;artifactId&gt;postgresql&lt;/artifactId&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n    &lt;artifactId&gt;jjwt&lt;/artifactId&gt;\n    &lt;version&gt;0.9.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"setup/#como-compilar","title":"Como compilar","text":"<pre><code>mvn clean package\n</code></pre>"}]}